Django quick install guide:
 https://docs.djangoproject.com/en/3.1/intro/install/

Als Datenbank benutzen wir zur Zeit zur Einfachheit sqlite,
es muss also kein DB-server laufen.
Das wird fuer die echte Webseite natuerlich geaendert (Postgres oder MySQL, ...) 

Braucht Python 3.

Die folgenden zusaetzlichen Pakete werden gebraucht:

sage -pip install virtualenv
sage -python -m venv venv
source venv/bin/activate 

sage -pip install django
sage -pip install django-allauth
sage -pip install django-db
sage -pip install requests
sage -pip install requests-oauthlib
sage -pip install psycopg2-binary
sage -pip install python-decouple
sage -pip install dj-database-url
sage -pip install "django-anymail[mailgun]"
#sage -pip install django-crispy-forms
#sage -pip install django-bootstrap4
sage -pip install django-widget-tweaks
sage -pip install gitpython
sage -pip install pyyaml
sage -pip install timeout-decorator
sage -pip install func_timeout
sage -pip install bs4
sage -pip install pyro5
#sage -pip install pydriller
sage -pip install django-extensions

Fuer server:
sage -pip install gunicorn
sage -pip install psycopg2 #Needs sudo apt-get install libpq-dev

Benutze: 
sage -pip freeze > requirements.txt


Setup Postgres:
---------------
#Switch to postgres user:
sudo su - postgres
#Create a database user:
createuser u_numberdb
#Create a new database and set the user as the owner:
createdb numberdb --owner numberdb
#Define a strong password for the user:
psql -c "ALTER USER u_number WITH PASSWORD '23lkj4hkjrnmvcx98x908v09fjwelkjuojhlkjrwhre'"
#Exit the postgres user:
exit

#In .env, put the line (using the password from above):
DATABASE_URL=postgres://u_numberdb:23lkj4hkjrnmvcx98x908v09fjwelkjuojhlkjrwhre@localhost:5432/numberdb


---------------------------

Server starten:
python manage.py runserver
Die Webseite laeuft dann auf 
 http://127.0.0.1:8000/

Neue app installieren:
 python manage.py startapp name_der_app

Falls sich Modelle aendern:
 python manage.py makemigrations
was die Migrations-python-Dateien erstellt, die angepasst werden koennen, 
und danach zur Durchfuehrung der Migration in der DB:
 python manage.py migrate
Um zu sehen, wie der SQL code der Migrationen aussehen wuerden:
 python manage.py sqlmigrate polls 0001  )


Shell starten (e.g. um DB zu per Python zu durchforsten)
 python3 manage.py shell

Super user (admin) erstellen:
 python manage.py createsuperuser
Admin-Webseite: 
 http://127.0.0.1:8000/admin

--------------------
Run eval service:
1. Run name server:
  sage -python -m Pyro5.nameserver
2. Run eval service:
  sage -python eval.py

---------------------------------------
If reset of postgres numberdb database is needed:
sudo su postgres
psql
drop database numberdb;
create database numberdb with owner u_numberdb;
\q
exit
#Possibly delete all migrations except for the initial one
sage -python manage.py migrate
sage -python manage.py createsuperuser

---------------------------------------
Circumvent email confirmation:
sage -python manage.py shell
from db.models import *
e = UserProfile.objects.first().user.emailaddress_set.first()
e.verified = True
e.save()

########

Postgres:
Ver Cluster Port Status Owner    Data directory              Log file
12  main    5432 down   postgres /var/lib/postgresql/12/main /var/log/postgresql/postgresql-12-main.log
